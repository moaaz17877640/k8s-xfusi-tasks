apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"webserver","namespace":"default"},"spec":{"containers":[{"image":"nginx:latest","name":"nginx-container","volumeMounts":[{"mountPath":"/var/log/nginx","name":"shared-logs"}]},{"command":["sh","-c","while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep 30; done"],"image":"ubuntu:latest","name":"sidecar-container","volumeMounts":[{"mountPath":"/var/log/nginx","name":"shared-logs"}]}],"volumes":[{"emptyDir":{},"name":"shared-logs"}]}}
  name: webserver
  namespace: default
spec:
  containers:
  - image: nginx:latest
    imagePullPolicy: Always
    name: nginx-container
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/log/nginx
      name: shared-logs
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cxlgq
      readOnly: true
  - command:
    - sh
    - -c
    - while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep
      30; done
    image: ubuntu:latest
    imagePullPolicy: Always
    name: sidecar-container
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/log/nginx
      name: shared-logs
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cxlgq
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: shared-logs
  - name: kube-api-access-cxlgq
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  containerStatuses:
  - containerID: docker://70a369d426c9e882d4a6ad7b0c232a7cd1df599cc932cfdd31d03abc2f0e4e1b
    image: nginx:latest
    imageID: docker-pullable://nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
    lastState: {}
    name: nginx-container
    volumeMounts:
    - mountPath: /var/log/nginx
      name: shared-logs
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cxlgq
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: docker://17e4906a82895f0ef48180a293bbb1c0c87d77edc9406ee5c42c9c1fd7b56cc8
    image: ubuntu:latest
    imageID: docker-pullable://ubuntu@sha256:72297848456d5d37d1262630108ab308d3e9ec7ed1c3286a32fe09856619a782
    lastState: {}
    name: sidecar-container
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-03-03T15:08:40Z"
    volumeMounts:
    - mountPath: /var/log/nginx
      name: shared-logs
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cxlgq
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 192.168.49.2
  hostIPs:
  - ip: 192.168.49.2
  phase: Running
  podIP: 10.244.0.10
  podIPs:
  - ip: 10.244.0.10
  qosClass: BestEffort
